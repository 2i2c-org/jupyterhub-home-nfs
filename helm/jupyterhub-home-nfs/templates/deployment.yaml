apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nfs-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: nfs-server
        # The component label is used by the shared volume free space panel
        # in jupyterhub/grafana-dashboards
        # https://github.com/jupyterhub/grafana-dashboards/blob/18ba92d98cd297951673850a4c92507479ec4ca2/dashboards/jupyterhub.jsonnet#L322
        component: shared-volume-metrics
      annotations:
        {{- if .Values.prometheusExporter.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        {{- end }}
        {{- if .Values.quotaEnforcer.config_file }}
        # checksum of the config file to trigger a deployment when the config changes
        checksum/config: {{ .Values.quotaEnforcer.config_file | sha256sum }}
        {{- end }}
    spec:
      containers:
      - name: nfs-server
        image: "{{ .Values.nfsServer.image.repository }}:{{ .Values.nfsServer.image.tag }}"
        ports:
        - name: nfs
          containerPort: 2049
        - name: mountd
          containerPort: 20048
        - name: rpcbind
          containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
        - name: home-directories
          mountPath: /export
        resources: {{ toJson .Values.nfsServer.resources }}
      - name: enforce-xfs-quota
        image: "{{ .Values.quotaEnforcer.image.repository }}:{{ .Values.quotaEnforcer.image.tag }}"
        {{- if .Values.quotaEnforcer.config_file }}
        command: ["python", "-m", "jupyterhub_home_nfs.generate", "--config-file", "/etc/jupyterhub-home-nfs/quota-enforcer-config.py"]
        {{- else }}
        command: ["python", "-m", "jupyterhub_home_nfs.generate",
          "--paths", "{{ .Values.quotaEnforcer.path }}", 
          "--hard-quota", "{{ .Values.quotaEnforcer.hardQuota }}"
        {{- range .Values.quotaEnforcer.exclude }}
        , "--exclude", {{ . | quote }}
        {{- end }}
        ]
        {{- end }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: home-directories
          mountPath: /export
        {{- if .Values.quotaEnforcer.config_file }}
        - name: quota-enforcer-config
          mountPath: /etc/jupyterhub-home-nfs
        {{- end }}
        resources: {{ toJson .Values.quotaEnforcer.resources }}
      {{- if .Values.prometheusExporter.enabled }}
      - name: metrics-exporter
        image: "{{ .Values.prometheusExporter.image.repository }}:{{ .Values.prometheusExporter.image.tag }}"
        args:
        # Disable default collectors; we only want filesystem metrics
        - --collector.disable-defaults
        - --collector.filesystem
        # Exclude some patterns of mount points to avoid collecting unnecessary metrics
        - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|etc|var/run/.+|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
        ports:
        - name: metrics
          containerPort: 9100
        volumeMounts:
        - name: home-directories
          # Mounting under /shared-volume to match path in dashboard definition in jupyterhub/grafana-dashboards
          mountPath: /shared-volume
          readOnly: true
        resources: {{ toJson .Values.prometheusExporter.resources }}
      {{- end }}
      volumes:
      - name: home-directories
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-nfs-home-directories-claim
      {{- if .Values.quotaEnforcer.config_file }}
      - name: quota-enforcer-config
        configMap:
          name: {{ .Release.Name }}-quota-enforcer-config
      {{- end }}
