# we use a PersistentVolume with a pre-provisioned disk instead of
# dynamic provisioning, because we want to be able to reuse the same
# disk even when the k8s cluster is deleted and recreated.
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-home-directories
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain # <--- This is the key to retain the disk
  storageClassName: ""
  gcePersistentDisk:
    pdName: jupyter-nfs-home-directories
    fsType: xfs
  mountOptions:
    - rw
    - relatime
    - nouuid
    - attr2
    - inode64
    - logbufs=8
    - logbsize=32k
    - pquota # <--- This is the key to enable XFS quota

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-home-directories
  namespace: nfs-test
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi
  storageClassName: ""
  volumeName: nfs-home-directories

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: nfs-test
spec:
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
    spec:
      containers:
        - name: nfs-server
          image: ghcr.io/2i2c-org/nfs-ganesha:0.0.1-0.dev.git.1.hcede885
          ports:
            - name: nfs
              containerPort: 2049
            - name: mountd
              containerPort: 20048
            - name: rpcbind
              containerPort: 111
          securityContext:
            privileged: true
          volumeMounts:
            - name: home-directories
              mountPath: /export
        - name: enforce-xfs-quota
          image: ghcr.io/2i2c-org/jupyterhub-home-nfs:0.0.1-0.dev.git.1.hcede885
          command:
            [
              "python",
              "-m",
              "jupyterhub_home_nfs.generate",
              "/export",
              "--hard-quota",
              "0.001",
            ]
          securityContext:
            privileged: true
          volumeMounts:
            - name: home-directories
              mountPath: /export
      volumes:
        - name: home-directories
          persistentVolumeClaim:
            claimName: nfs-home-directories

---
apiVersion: v1
kind: Service
metadata:
  name: nfs-service
  namespace: nfs-test
spec:
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
  selector:
    app: nfs-server
